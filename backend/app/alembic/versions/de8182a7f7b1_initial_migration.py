"""initial migration

Revision ID: de8182a7f7b1
Revises: 
Create Date: 2025-04-26 14:29:45.096128

"""
from alembic import op
import sqlalchemy as sa
import sqlmodel.sql.sqltypes


# revision identifiers, used by Alembic.
revision = 'de8182a7f7b1'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('city',
    sa.Column('city_id', sa.Integer(), nullable=False),
    sa.Column('city_name', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
    sa.PrimaryKeyConstraint('city_id')
    )
    op.create_table('feature',
    sa.Column('feature_id', sa.Integer(), nullable=False),
    sa.Column('feature_name', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
    sa.PrimaryKeyConstraint('feature_id')
    )
    op.create_table('propertycategory',
    sa.Column('category_id', sa.Integer(), nullable=False),
    sa.Column('category_name', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
    sa.PrimaryKeyConstraint('category_id')
    )
    op.create_table('revokedtoken',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('token', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('expires_at', sa.DateTime(), nullable=False),
    sa.Column('revoked_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_revokedtoken_token'), 'revokedtoken', ['token'], unique=False)
    op.create_table('user',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(length=100), nullable=False),
    sa.Column('phone', sqlmodel.sql.sqltypes.AutoString(length=20), nullable=True),
    sa.Column('email', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
    sa.Column('hashed_password', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=True),
    sa.Column('oauth_provider', sa.Enum('none', 'google', name='oauthprovider'), nullable=False),
    sa.Column('oauth_uid', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=True),
    sa.Column('profile_picture_url', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=True),
    sa.Column('role', sa.Enum('customer', 'admin', 'property_owner', name='userrole'), nullable=False),
    sa.Column('is_email_verified', sa.Boolean(), nullable=False),
    sa.Column('is_approved', sa.Boolean(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=True),
    sa.PrimaryKeyConstraint('user_id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('oauth_uid'),
    sa.UniqueConstraint('phone')
    )
    op.create_table('verificationcodedb',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('email', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('code', sqlmodel.sql.sqltypes.AutoString(length=6), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('expires_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_verificationcodedb_email'), 'verificationcodedb', ['email'], unique=False)
    op.create_table('district',
    sa.Column('district_id', sa.Integer(), nullable=False),
    sa.Column('city_id', sa.Integer(), nullable=False),
    sa.Column('district_name', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
    sa.ForeignKeyConstraint(['city_id'], ['city.city_id'], ),
    sa.PrimaryKeyConstraint('district_id')
    )
    op.create_table('property',
    sa.Column('property_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('category_id', sa.Integer(), nullable=True),
    sa.Column('title', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('bedrooms', sa.Integer(), nullable=False),
    sa.Column('bathrooms', sa.Integer(), nullable=False),
    sa.Column('land_area', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('floor_area', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('status', sa.Enum('available', 'rented', name='propertystatusenum'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=True),
    sa.Column('listed_at', sa.DateTime(timezone=True), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=True),
    sa.Column('rating', sa.Numeric(precision=3, scale=2), nullable=True),
    sa.ForeignKeyConstraint(['category_id'], ['propertycategory.category_id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.user_id'], ),
    sa.PrimaryKeyConstraint('property_id')
    )
    op.create_table('commune',
    sa.Column('commune_id', sa.Integer(), nullable=False),
    sa.Column('district_id', sa.Integer(), nullable=False),
    sa.Column('commune_name', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
    sa.ForeignKeyConstraint(['district_id'], ['district.district_id'], ),
    sa.PrimaryKeyConstraint('commune_id')
    )
    op.create_table('propertyfeature',
    sa.Column('property_id', sa.Integer(), nullable=False),
    sa.Column('feature_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['feature_id'], ['feature.feature_id'], ),
    sa.ForeignKeyConstraint(['property_id'], ['property.property_id'], ),
    sa.PrimaryKeyConstraint('property_id', 'feature_id')
    )
    op.create_table('propertymedia',
    sa.Column('media_id', sa.Integer(), nullable=False),
    sa.Column('property_id', sa.Integer(), nullable=False),
    sa.Column('media_url', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
    sa.Column('media_type', sa.Enum('image', 'video', name='mediatype'), nullable=False),
    sa.ForeignKeyConstraint(['property_id'], ['property.property_id'], ),
    sa.PrimaryKeyConstraint('media_id')
    )
    op.create_table('propertypricing',
    sa.Column('pricing_id', sa.Integer(), nullable=False),
    sa.Column('property_id', sa.Integer(), nullable=False),
    sa.Column('rent_price', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('electricity_price', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('water_price', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('other_price', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('available_from', sa.Date(), nullable=True),
    sa.ForeignKeyConstraint(['property_id'], ['property.property_id'], ),
    sa.PrimaryKeyConstraint('pricing_id')
    )
    op.create_table('propertyview',
    sa.Column('view_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('property_id', sa.Integer(), nullable=False),
    sa.Column('viewed_at', sa.DateTime(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=True),
    sa.ForeignKeyConstraint(['property_id'], ['property.property_id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.user_id'], ),
    sa.PrimaryKeyConstraint('view_id')
    )
    op.create_table('review',
    sa.Column('review_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('property_id', sa.Integer(), nullable=False),
    sa.Column('rating', sa.Integer(), nullable=True),
    sa.Column('comment', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=True),
    sa.ForeignKeyConstraint(['property_id'], ['property.property_id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.user_id'], ),
    sa.PrimaryKeyConstraint('review_id')
    )
    op.create_table('viewingrequest',
    sa.Column('request_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('property_id', sa.Integer(), nullable=False),
    sa.Column('requested_time', sa.DateTime(), nullable=False),
    sa.Column('status', sa.Enum('pending', 'accepted', 'denied', name='viewingrequeststatusenum'), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['property_id'], ['property.property_id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.user_id'], ),
    sa.PrimaryKeyConstraint('request_id')
    )
    op.create_table('wishlist',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('property_id', sa.Integer(), nullable=False),
    sa.Column('added_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['property_id'], ['property.property_id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.user_id'], ),
    sa.PrimaryKeyConstraint('user_id', 'property_id')
    )
    op.create_table('propertylocation',
    sa.Column('location_id', sa.Integer(), nullable=False),
    sa.Column('property_id', sa.Integer(), nullable=False),
    sa.Column('city_id', sa.Integer(), nullable=False),
    sa.Column('district_id', sa.Integer(), nullable=False),
    sa.Column('commune_id', sa.Integer(), nullable=False),
    sa.Column('street_number', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=True),
    sa.Column('latitude', sa.Numeric(precision=9, scale=6), nullable=True),
    sa.Column('longitude', sa.Numeric(precision=9, scale=6), nullable=True),
    sa.ForeignKeyConstraint(['city_id'], ['city.city_id'], ),
    sa.ForeignKeyConstraint(['commune_id'], ['commune.commune_id'], ),
    sa.ForeignKeyConstraint(['district_id'], ['district.district_id'], ),
    sa.ForeignKeyConstraint(['property_id'], ['property.property_id'], ),
    sa.PrimaryKeyConstraint('location_id'),
    sa.UniqueConstraint('property_id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('propertylocation')
    op.drop_table('wishlist')
    op.drop_table('viewingrequest')
    op.drop_table('review')
    op.drop_table('propertyview')
    op.drop_table('propertypricing')
    op.drop_table('propertymedia')
    op.drop_table('propertyfeature')
    op.drop_table('commune')
    op.drop_table('property')
    op.drop_table('district')
    op.drop_index(op.f('ix_verificationcodedb_email'), table_name='verificationcodedb')
    op.drop_table('verificationcodedb')
    op.drop_table('user')
    op.drop_index(op.f('ix_revokedtoken_token'), table_name='revokedtoken')
    op.drop_table('revokedtoken')
    op.drop_table('propertycategory')
    op.drop_table('feature')
    op.drop_table('city')
    # ### end Alembic commands ###
